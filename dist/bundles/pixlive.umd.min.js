!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/core"),require("ionic-angular"),require("rxjs/BehaviorSubject"),require("rxjs/Subject")):"function"==typeof define&&define.amd?define(["exports","@angular/core","ionic-angular","rxjs/BehaviorSubject","rxjs/Subject"],t):t(e.pixlive=e.pixlive||{},e.ng.core,e["ionic-angular"],e.Rx,e.Rx)}(this,function(e,t,n,o,i){"use strict";var r=function(){function e(e,t,n,o){this.platform=e,this.el=t,this.renderer=n,this.viewCtrl=o}return e.prototype.getNativeElement=function(){return this.el.nativeElement},e.prototype.initArViewLifeCycle=function(){var e=this;this.viewCtrl.willEnter.subscribe(function(){console.log("will enter"),e.arView&&(console.log("XXXXXX Opening - beforeEnter"),e.arView.beforeEnter(),e.onOrientationChange(e.el,e.arView))}),this.viewCtrl.didEnter.subscribe(function(){console.log("did enter"),e.arView&&(console.log("XXXXXX Opening - afterEnter"),e.arView.afterEnter()),e.fakeCamera&&e.renderer.setElementStyle(e.fakeCamera,"display","block")}),this.viewCtrl.willLeave.subscribe(function(){console.log("will leave"),e.arView&&(console.log("XXXXXX Closing - beforeLeave"),e.arView.beforeLeave()),e.fakeCamera&&e.renderer.setElementStyle(e.fakeCamera,"display","none")}),this.viewCtrl.willUnload.subscribe(function(){console.log("will unload")}),this.viewCtrl.didLeave.subscribe(function(){console.log("did leave"),e.arView&&(console.log("XXXXXX Closing - afterLeave"),e.arView.afterLeave())})},e.prototype.onOrientationChange=function(e,t){console.log("orientation change"),console.log(JSON.stringify(e.nativeElement.getBoundingClientRect())),setTimeout(function(){var n=e.nativeElement.getBoundingClientRect();console.log(JSON.stringify(n)),t.resize(n.left,n.top,n.width,n.height)},300)},e.prototype.ngOnInit=function(){var e=this;this.renderer.setElementStyle(this.el.nativeElement,"display","inline-block"),this.initArViewLifeCycle(),this.platform.ready().then(function(){console.log("platform ready"),setTimeout(function(){var t=e.el.nativeElement.getBoundingClientRect();if(window.cordova){console.log("creating AR view"),e.arView=window.cordova.plugins.PixLive.createARView(t.left,t.top,t.width,t.height),console.log("AR view created");var n=e.el,o=e.arView,i=e.onOrientationChange;window.addEventListener("orientationchange",function(){i(n,o)},!1)}else{var r=document.createElement("DIV");document.body.appendChild(r),e.renderer.setElementStyle(r,"position","fixed"),e.renderer.setElementStyle(r,"background-color","gray"),e.renderer.setElementStyle(r,"left",t.left+"px"),e.renderer.setElementStyle(r,"top",t.top+"px"),e.renderer.setElementStyle(r,"width",t.width+"px"),e.renderer.setElementStyle(r,"height",t.height+"px"),e.fakeCamera=r}},300)});for(var t=this.el.nativeElement.parentElement;t;)this.renderer.setElementStyle(t,"background-color","transparent"),t=t.parentElement},e.prototype.ngAfterViewInit=function(){console.log("ng after view init")},e.prototype.ngDoCheck=function(){console.log("ng do check")},e.prototype.ngAfterViewChecked=function(){console.log("ng after view checked")},e.prototype.setTouchEnabled=function(e){e?this.arView.enableTouch():this.arView.disableTouch()},e.decorators=[{type:t.Directive,args:[{selector:"pixlive-camera-view"}]}],e.ctorParameters=function(){return[{type:n.Platform},{type:t.ElementRef},{type:t.Renderer},{type:n.ViewController}]},e}(),s=function(){function e(e){this.platform=e,this.synchronizationProgress=new o.BehaviorSubject(101),this.annotationPresence=new i.Subject,this.eventFromContent=new i.Subject,this.enterContext=new i.Subject}return e.prototype.init=function(){var e=this;this.platform.ready().then(function(){window.cordova&&(window.cordova.plugins.PixLive.onEventReceived=function(t){if(console.log("New event "+JSON.stringify(t)),"presentAnnotations"===t.type)e.annotationPresence.next(!0);else if("hideAnnotations"===t.type)e.annotationPresence.next(!1);else if("eventFromContent"===t.type){var n=new a;n.name=t.eventName,n.params=t.eventParams,e.eventFromContent.next(n)}else"enterContext"===t.type&&e.enterContext.next(t.context)})})},e.prototype.getSynchronizationProgress=function(){return this.synchronizationProgress.asObservable()},e.prototype.getAnnotationPresenceObservable=function(){return this.annotationPresence.asObservable()},e.prototype.getEventFromContentObservable=function(){return this.eventFromContent.asObservable()},e.prototype.getEnterContextObservable=function(){return this.enterContext.asObservable()},e.prototype.syncWithTags=function(e){var t=this;this.synchronizationProgress.next(0),this.platform.ready().then(function(){window.cordova?(t.synchronizationProgress.next(1),e.forEach(function(e){console.log("Sync tags: "+JSON.stringify(e)),window.cordova.plugins.PixLive.synchronize(e,function(e){t.synchronizationProgress.next(100),console.log("Sync success"),console.log(e)},function(e){t.synchronizationProgress.next(102),console.log("Sync failure"),console.log(e)})})):t.synchronizationProgress.next(103)})},e.prototype.getGpsPoints=function(e,t){return new Promise(function(n,o){window.cordova?window.cordova.plugins.PixLive.getNearbyGPSPoints(e,t,function(e){console.log("Get gps success"),n(e)},function(){o("getGpsPoints failed")}):o("getGpsPoints failed: no cordova plugin")})},e.prototype.getGpsPointsInBoundingBox=function(e,t,n,o){return new Promise(function(i,r){window.cordova?window.cordova.plugins.PixLive.getGPSPointsInBoundingBox(e,t,n,o,function(e){i(e)},function(){r("Error")}):r("No cordova plugin")})},e.prototype.getContext=function(e){return new Promise(function(t,n){window.cordova?window.cordova.plugins.PixLive.getContext(e,function(e){console.log("Get context success"),t(e)},function(){n("getContext failed")}):n("getContext failed: no cordova plugin")})},e.decorators=[{type:t.Injectable}],e.ctorParameters=function(){return[{type:n.Platform}]},e}(),a=function(){return function(){}}(),c=function(){function e(e,t,n,o,i){this.platform=e,this.el=t,this.renderer=n,this.viewCtrl=o,this.pixliveService=i}return e.prototype.ngOnInit=function(){var e=this;this.pixliveService.getAnnotationPresenceObservable().subscribe(function(t){return e.cameraView.setTouchEnabled(t)})},e.prototype.ngAfterViewInit=function(){},e.prototype.ngDoCheck=function(){},e.prototype.ngAfterViewChecked=function(){},e.decorators=[{type:t.Component,args:[{selector:"pixlive",template:'<pixlive-camera-view style="width: 100%; height: 100%;"></pixlive-camera-view>'}]}],e.ctorParameters=function(){return[{type:n.Platform},{type:t.ElementRef},{type:t.Renderer},{type:n.ViewController},{type:s}]},e.propDecorators={cameraView:[{type:t.ViewChild,args:[r]}]},e}(),l=function(){function e(){}return e.decorators=[{type:t.NgModule,args:[{declarations:[c,r],exports:[c],providers:[s]}]}],e.ctorParameters=function(){return[]},e}();e.PixliveModule=l,e.PixliveComponent=c,e.PixliveService=s,Object.defineProperty(e,"__esModule",{value:!0})});