{"version":3,"sources":["../../src/pixlive-service.ts"],"names":[],"mappings":"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","file":"pixlive-service.js","sourceRoot":"","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Platform } from 'ionic-angular';\n\nimport { Observable } from 'rxjs';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { Subject } from 'rxjs/Subject';\n\ndeclare var window;\n\n\nexport class PixliveService {\n\n  /**\n   * BehaviorSubject keeping track of the synchronization progress.\n   */\n  private synchronizationProgress: BehaviorSubject<number> = new BehaviorSubject(101);\n\n  private annotationPresence: Subject<boolean> = new Subject();\n  private eventFromContent: Subject<EventFromContent> = new Subject();\n  private enterContext: Subject<string> = new Subject();\n\n  constructor(\n    private platform: Platform\n  ) {}\n\n  public init() {\n    this.platform.ready().then(() => {\n      if (window.cordova) {\n         window.cordova.plugins.PixLive.onEventReceived = (event) => {\n          console.log(\"New event \" + JSON.stringify(event));\n          if (event.type === \"presentAnnotations\") {\n            this.annotationPresence.next(true);\n          } else if (event.type === \"hideAnnotations\") {\n            this.annotationPresence.next(false);\n          } else if (event.type === \"eventFromContent\") {\n            //Example: {\"type\":\"eventFromContent\",\"eventName\":\"multipleChoice\",\"eventParams\":\"{\\\"question\\\":\\\"Quel est la profondeur du lac de gruyere?\\\",\\\"answers\\\":[\\\"1m\\\",\\\"10m\\\",\\\"100m\\\"],\\\"correctAnswer\\\":2,\\\"hint\\\":\\\"On peut se noyer\\\"}\"}\n            let eventFromContent = new EventFromContent();\n            eventFromContent.name = event.eventName;\n            eventFromContent.params = event.eventParams;\n            this.eventFromContent.next(eventFromContent);\n          } else if (event.type === \"enterContext\") {\n            //Example: {\"type\":\"enterContext\",\"context\":\"q7044o3xhfqkc7q\"}\n            this.enterContext.next(event.context);\n          }\n        }\n      }\n    });\n  }\n\n  /**\n   * Gets an observable for listening on synchronization progress. The last known\n   * value is given when the listener subscribes to the observable.\n   * A value of 100 means that the synchronization is over.\n   * A value above 100 means that an error occured during the synchronization.\n   */\n  public getSynchronizationProgress() : Observable<number> {\n    return this.synchronizationProgress.asObservable();\n  }\n\n  /**\n   * Gets an observable that is called when the event \"presentAnnotations\" or\n   * \"hideAnnotations\" (true/false respectively) is called. It informs that\n   * an AR annotation is being displayed or not.\n   */\n  public getAnnotationPresenceObservable() : Observable<boolean> {\n    return this.annotationPresence.asObservable();\n  }\n\n  /**\n   * Gets an observable that is called when an event from content is triggered (e.g. coupon)\n   */\n  public getEventFromContentObservable() : Observable<EventFromContent> {\n    return this.eventFromContent.asObservable();\n  }\n\n  /**\n   * Gets an observable that is called when a context is entered (i.e. activated). It gives\n   * the public ID of the context.\n   */\n  public getEnterContextObservable() : Observable<string> {\n    return this.enterContext.asObservable();\n  }\n\n  // public sync() : void {\n  //   this.syncWithTags();\n  // }\n\n  /**\n   * Requests a synchronization with PixLive Maker\n   */\n  public syncWithTags(tagsObs: Observable<string[][]>) : void {\n    this.synchronizationProgress.next(0);\n    this.platform.ready().then(() => {\n      if (window.cordova) {\n        this.synchronizationProgress.next(1);\n\n        tagsObs.forEach( tags => {\n          console.log(\"Sync tags: \" + JSON.stringify(tags));\n          window.cordova.plugins.PixLive.synchronize(tags, (contexts) => {\n            this.synchronizationProgress.next(100);\n            console.log(\"Sync success\");\n            console.log(contexts);\n          }, (reason) => {\n            this.synchronizationProgress.next(102);\n            console.log(\"Sync failure\");\n            console.log(reason);\n          });\n        });\n\n      } else {\n        this.synchronizationProgress.next(103);\n      }\n    });\n  }\n\n  /**\n   * Gets the nearby GPS points\n   * @param latitude the current latitude\n   * @param longitude the current longitude\n   */\n  public getGpsPoints(latitude: number, longitude: number): Promise<GPSPoint[]> {\n    return new Promise((resolve, reject) => {\n      if (window.cordova) {\n        window.cordova.plugins.PixLive.getNearbyGPSPoints(latitude, longitude,\n          (data) => {\n            console.log(\"Get gps success\");\n            resolve(data as GPSPoint[]);\n          },\n          () => {\n            reject(\"getGpsPoints failed\");\n          });\n      } else {\n        reject(\"getGpsPoints failed: no cordova plugin\");\n      }\n    });\n  }\n\n  /**\n   * Gets all GPS points in the given bounding box.\n   * @param minLat the minimum latitude\n   * @param minLon the minimum longitude\n   * @param maxLat the maximum latitude\n   * @param maxLon the maximum longitude\n   */\n  public getGpsPointsInBoundingBox(minLat, minLon, maxLat, maxLon): Promise<GPSPoint[]> {\n    return new Promise((resolve, reject) => {\n      if (window.cordova) {\n        window.cordova.plugins.PixLive.getGPSPointsInBoundingBox(minLat, minLon, maxLat, maxLon,\n          (data) => {\n            resolve(data as GPSPoint[]);\n          },\n          () => {\n            reject(\"Error\");\n          });\n      } else {\n        reject(\"No cordova plugin\");\n      }\n    });\n  }\n\n\n  /**\n   * return the specified context\n   * @param contextId the ID of the context\n   */\n  public getContext(contextId: string): Promise<Context> { //TODO context\n    return new Promise((resolve, reject) => {\n      if (window.cordova) {\n        window.cordova.plugins.PixLive.getContext(contextId,\n          (data) => {\n            console.log(\"Get context success\");\n            resolve(data as Context);\n          },\n          () => {\n            reject(\"getContext failed\");\n          });\n      } else {\n        reject(\"getContext failed: no cordova plugin\");\n      }\n    });\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Platform, },\n];\n}\n\n/**\n * Class representing a PixLive Maker GPS point.\n */\nexport class GPSPoint {\n  lat: number;\n  lon: number;\n  detectionRadius: number;\n  distanceFromCurrentPos: number;\n  category: string;\n  label: string;\n  contextId: string;\n}\n\nexport class Context {\n  activate: () => void;\n  contextId: string;\n  name: string;\n  description: string;\n  imageHiResURL: string;\n  imageThumbnailURL: string;\n  notificationTitle: string;\n  notificationMessage: string;\n}\n\nexport class EventFromContent {\n  name: string;\n  params: string;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}