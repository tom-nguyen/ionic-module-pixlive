{"version":3,"sources":["../../src/pixlive.component.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAA,EAAmB,SAAA,EAAU,MAAO,eAAA,CAAgB;AAE7D,OAAO,EAAE,cAAA,EAAe,MAAO,mBAAA,CAAoB;AACnD,OAAO,EAAE,gBAAA,EAAiB,MAAO,qBAAA,CAAsB;AAGvD;IAIE,0BAAoB,cAA8B;QAA9B,mBAAc,GAAd,cAAc,CAAgB;IAElD,CAAC;IAED,mCAAQ,GAAR;QAAA,iBAEC;QADC,IAAI,CAAC,cAAc,CAAC,+BAA+B,EAAE,CAAC,SAAS,CAAC,UAAA,OAAO,IAAI,OAAA,KAAI,CAAC,UAAU,CAAC,eAAe,CAAC,OAAO,CAAC,EAAxC,CAAwC,CAAC,CAAC;IACvH,CAAC;IAED;;;;OAIG;IACI,uCAAY,GAAnB,UAAoB,SAAkB;QACpC,IAAI,CAAC,UAAU,CAAC,eAAe,CAAC,SAAS,CAAC,CAAC;IAC7C,CAAC;IAGI,2BAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;oBACxB,QAAQ,EAAE,SAAS;oBACnB,QAAQ,EAAE,gFAAgF;iBAC3F,EAAG,EAAE;KACL,CAAC;IACF,kBAAkB;IACX,+BAAc,GAAmE,cAAM,OAAA;QAC9F,EAAC,IAAI,EAAE,cAAc,GAAG;KACvB,EAF6F,CAE7F,CAAC;IACK,+BAAc,GAA2C;QAChE,YAAY,EAAE,CAAC,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,gBAAgB,EAAG,EAAE,EAAE;KAC/D,CAAC;IACF,uBAAC;CAnCD,AAmCC,IAAA;SAnCY,gBAAgB","file":"pixlive.component.js","sourceRoot":"","sourcesContent":["import { Component, OnInit, ViewChild } from '@angular/core';\n\nimport { PixliveService } from './pixlive-service';\nimport { PixliveDirective } from './pixlive.directive';\n\n\nexport class PixliveComponent implements OnInit {\n\n   cameraView: PixliveDirective;\n\n  constructor(private pixliveService: PixliveService) {\n\n  }\n\n  ngOnInit() {\n    this.pixliveService.getAnnotationPresenceObservable().subscribe(visible => this.cameraView.setTouchEnabled(visible));\n  }\n\n  /**\n   * Defines whether the view is clickable. If the view is clickable, it will intercept the touch event.\n   * If a view in on top of the component, then you must disable the click interception.\n   * @param clickable true if the view is clickable and intercept all touch events, false otherwise.\n   */\n  public setClickable(clickable: boolean) {\n    this.cameraView.setTouchEnabled(clickable);\n  }\n\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'pixlive',\n  template: '<pixlive-camera-view style=\"width: 100%; height: 100%;\"></pixlive-camera-view>'\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: PixliveService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'cameraView': [{ type: ViewChild, args: [PixliveDirective, ] },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}